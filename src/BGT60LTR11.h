/* SPDX-License-Identifier: MIT */

#ifndef BGT60LTR11_H_
#define BGT60LTR11_H_

#include <stddef.h>
#include <stdint.h>

#define BGT60LTR11_REG0_CTRL0 0x00
#define BGT60LTR11_REG1_CTRL1 0x01
#define BGT60LTR11_REG2_DETECT_THRESHOLDS 0x02
#define BGT60LTR11_REG3_RESERVED3 0x03
#define BGT60LTR11_REG4_PLL1 0x04
#define BGT60LTR11_REG5_PLL2 0x05
#define BGT60LTR11_REG6_PLL3 0x06
#define BGT60LTR11_REG7_TIMING 0x07
#define BGT60LTR11_REG8_DIVIDER 0x08
#define BGT60LTR11_REG9_BASEBAND 0x09
#define BGT60LTR11_REG10_DETETCTOR_HOLDTIME 0x0A
#define BGT60LTR11_REG11_RESERVED0B 0x0B
#define BGT60LTR11_REG12_BITE_AMUX 0x0C
#define BGT60LTR11_REG13_ALGO1 0x0D
#define BGT60LTR11_REG14_ALGO2 0x0E
#define BGT60LTR11_REG15_DIGITAL_CTRL 0x0F
#define BGT60LTR11_REG34_ADC_START 0x22
#define BGT60LTR11_REG35_ADC_CONVERT 0x23
#define BGT60LTR11_REG36_ADC_STATUS 0x24
#define BGT60LTR11_REG38_ADC_RESULTS_MPA 0x26
#define BGT60LTR11_REG39_ADC_RESULTS_MPAX 0x27
#define BGT60LTR11_REG40_ADC_RESULTS_IFI 0x28
#define BGT60LTR11_REG41_ADC_RESULTS_IFQ 0x29
#define BGT60LTR11_REG42_ADC_RESULTS_BITE_PD_OUT 0x2A
#define BGT60LTR11_REG43_ADC_RESULTS_BITE_PD_OUTX 0x2B
#define BGT60LTR11_REG44_ADC_RESULTS_QS2 0x2C
#define BGT60LTR11_REG45_ADC_RESULTS_QS3 0x2D
#define BGT60LTR11_REG46_ADC_RESULTS_CM_IFI 0x2E
#define BGT60LTR11_REG47_ADC_RESULTS_CM_IFQ 0x2F
#define BGT60LTR11_REG48_ADC_RESULTS_CM_VDD_RF 0x30
#define BGT60LTR11_REG49_ADC_RESULTS_GND 0x31
#define BGT60LTR11_REG50_ADC_RESULTS_TEMPERATURE 0x32
#define BGT60LTR11_REG51_ADC_RESULTS_PLL_BANDGAP 0x33
#define BGT60LTR11_REG52_ADC_RESULTS_ADC_BANDGAP 0x34
#define BGT60LTR11_REG53_ADC_RESULTS_ABB_BANDGAP 0x35
#define BGT60LTR11_REG55_EFUSE 0x37
#define BGT60LTR11_REG56_STATUS 0x38

#define BGT60LTR11_EXPAND_MACRO(content) content
#define BGT60LTR11_FIELD(NAME) NAME##_MASK, NAME##_OFFSET
#define BGT60LTR11_GET_FIELD_IMPL(FIELD_MASK, FIELD_OFFSET, value) (((value) >> FIELD_OFFSET) & FIELD_MASK)
#define BGT60LTR11_SET_FIELD_IMPL(FIELD_MASK, FIELD_OFFSET, value) (((value)&FIELD_MASK) << FIELD_OFFSET)
#define BGT60LTR11_GET_FIELD(...) BGT60LTR11_EXPAND_MACRO(BGT60LTR11_GET_FIELD_IMPL(__VA_ARGS__))
#define BGT60LTR11_SET_FIELD(...) BGT60LTR11_EXPAND_MACRO(BGT60LTR11_SET_FIELD_IMPL(__VA_ARGS__))
#define BGT60LTR11_MIN(a, b) ((a) < (b) ? (a) : (b))
#define BGT60LTR11_BYTE_PARITY(b) (((b)&0x01) ^ (((b)&0x02) >> 1) ^ (((b)&0x04) >> 2) ^ (((b)&0x08) >> 3) ^ \
                                   (((b)&0x10) >> 4) ^ (((b)&0x20) >> 5) ^ (((b)&0x40) >> 6) ^ (((b)&0x80) >> 7))

/* CTRL0 Fields */
#define BGT60LTR11_CTRL0_RXBUF_EN_MASK 0x1
#define BGT60LTR11_CTRL0_RXBUF_EN_OFFSET 0
#define BGT60LTR11_CTRL0_RXBUF_EN_FIELD BGT60LTR11_FIELD(BGT60LTR11_CTRL0_RXBUF_EN)

#define BGT60LTR11_CTRL0_LNA_EN_MASK 0x1
#define BGT60LTR11_CTRL0_LNA_EN_OFFSET 1
#define BGT60LTR11_CTRL0_LNA_EN_FIELD BGT60LTR11_FIELD(BGT60LTR11_CTRL0_LNA_EN)

#define BGT60LTR11_CTRL0_MIXI_EN_MASK 0x1
#define BGT60LTR11_CTRL0_MIXI_EN_OFFSET 2
#define BGT60LTR11_CTRL0_MIXI_EN_FIELD BGT60LTR11_FIELD(BGT60LTR11_CTRL0_MIXI_EN)

#define BGT60LTR11_CTRL0_MIXQ_EN_MASK 0x1
#define BGT60LTR11_CTRL0_MIXQ_EN_OFFSET 3
#define BGT60LTR11_CTRL0_MIXQ_EN_FIELD BGT60LTR11_FIELD(BGT60LTR11_CTRL0_MIXQ_EN)

#define BGT60LTR11_CTRL0_TXBUF_EN_MASK 0x1
#define BGT60LTR11_CTRL0_TXBUF_EN_OFFSET 4
#define BGT60LTR11_CTRL0_TXBUF_EN_FIELD BGT60LTR11_FIELD(BGT60LTR11_CTRL0_TXBUF_EN)

#define BGT60LTR11_CTRL0_MPA_EN_MASK 0x1
#define BGT60LTR11_CTRL0_MPA_EN_OFFSET 5
#define BGT60LTR11_CTRL0_MPA_EN_FIELD BGT60LTR11_FIELD(BGT60LTR11_CTRL0_MPA_EN)

#define BGT60LTR11_CTRL0_PLL_EN_MASK 0x1
#define BGT60LTR11_CTRL0_PLL_EN_OFFSET 8
#define BGT60LTR11_CTRL0_PLL_EN_FIELD BGT60LTR11_FIELD(BGT60LTR11_CTRL0_PLL_EN)

#define BGT60LTR11_CTRL0_PLL_ACTIVE_MASK 0x1
#define BGT60LTR11_CTRL0_PLL_ACTIVE_OFFSET 9
#define BGT60LTR11_CTRL0_PLL_ACTIVE_FIELD BGT60LTR11_FIELD(BGT60LTR11_CTRL0_PLL_ACTIVE)

#define BGT60LTR11_CTRL0_PLL_CLK_GATE_EN_MASK 0x1
#define BGT60LTR11_CTRL0_PLL_CLK_GATE_EN_OFFSET 10
#define BGT60LTR11_CTRL0_PLL_CLK_GATE_EN_FIELD BGT60LTR11_FIELD(BGT60LTR11_CTRL0_PLL_CLK_GATE_EN)

#define BGT60LTR11_CTRL0_PLL_OPEN_LOOP_MASK 0x1
#define BGT60LTR11_CTRL0_PLL_OPEN_LOOP_OFFSET 11
#define BGT60LTR11_CTRL0_PLL_OPEN_LOOP_FIELD BGT60LTR11_FIELD(BGT60LTR11_CTRL0_PLL_OPEN_LOOP)

#define BGT60LTR11_CTRL0_VCO_EN_MASK 0x1
#define BGT60LTR11_CTRL0_VCO_EN_OFFSET 12
#define BGT60LTR11_CTRL0_VCO_EN_FIELD BGT60LTR11_FIELD(BGT60LTR11_CTRL0_VCO_EN)

#define BGT60LTR11_CTRL0_VCOBUF_EN_MASK 0x1
#define BGT60LTR11_CTRL0_VCOBUF_EN_OFFSET 13
#define BGT60LTR11_CTRL0_VCOBUF_EN_FIELD BGT60LTR11_FIELD(BGT60LTR11_CTRL0_VCOBUF_EN)

/* CTRL1 Fields */
#define BGT60LTR11_CTRL1_BB_SAMPLE_EN_MASK 0x1
#define BGT60LTR11_CTRL1_BB_SAMPLE_EN_OFFSET 0
#define BGT60LTR11_CTRL1_BB_SAMPLE_EN_FIELD BGT60LTR11_FIELD(BGT60LTR11_CTRL1_BB_SAMPLE_EN)

#define BGT60LTR11_CTRL1_BB_AMP_EN_MASK 0x1
#define BGT60LTR11_CTRL1_BB_AMP_EN_OFFSET 1
#define BGT60LTR11_CTRL1_BB_AMP_EN_FIELD BGT60LTR11_FIELD(BGT60LTR11_CTRL1_BB_AMP_EN)

#define BGT60LTR11_CTRL1_BB_STRUP_HP_MASK 0x1
#define BGT60LTR11_CTRL1_BB_STRUP_HP_OFFSET 2
#define BGT60LTR11_CTRL1_BB_STRUP_HP_FIELD BGT60LTR11_FIELD(BGT60LTR11_CTRL1_BB_STRUP_HP)

#define BGT60LTR11_CTRL1_BB_CLK_CHOP_EN_MASK 0x1
#define BGT60LTR11_CTRL1_BB_CLK_CHOP_EN_OFFSET 4
#define BGT60LTR11_CTRL1_BB_CLK_CHOP_EN_FIELD BGT60LTR11_FIELD(BGT60LTR11_CTRL1_BB_CLK_CHOP_EN)

#define BGT60LTR11_CTRL1_BB_BOOST_DIS_MASK 0x1
#define BGT60LTR11_CTRL1_BB_BOOST_DIS_OFFSET 5
#define BGT60LTR11_CTRL1_BB_BOOST_DIS_FIELD BGT60LTR11_FIELD(BGT60LTR11_CTRL1_BB_BOOST_DIS)

#define BGT60LTR11_CTRL1_BB_DIG_DET_MASK 0x1
#define BGT60LTR11_CTRL1_BB_DIG_DET_OFFSET 7
#define BGT60LTR11_CTRL1_BB_DIG_DET_FIELD BGT60LTR11_FIELD(BGT60LTR11_CTRL1_BB_DIG_DET)

#define BGT60LTR11_CTRL1_QS_RD_EN_MASK 0x1
#define BGT60LTR11_CTRL1_QS_RD_EN_OFFSET 8
#define BGT60LTR11_CTRL1_QS_RD_EN_FIELD BGT60LTR11_FIELD(BGT60LTR11_CTRL1_QS_RD_EN)

#define BGT60LTR11_CTRL1_DIV_BIAS_EN_MASK 0x1
#define BGT60LTR11_CTRL1_DIV_BIAS_EN_OFFSET 12
#define BGT60LTR11_CTRL1_DIV_BIAS_EN_FIELD BGT60LTR11_FIELD(BGT60LTR11_CTRL1_DIV_BIAS_EN)

/* DETECT_THRESHOLDS Fields */
#define BGT60LTR11_DETECT_THRESHOLDS_THRS_MASK 0x1FFF
#define BGT60LTR11_DETECT_THRESHOLDS_THRS_OFFSET 0
#define BGT60LTR11_DETECT_THRESHOLDS_THRS_FIELD BGT60LTR11_FIELD(BGT60LTR11_DETECT_THRESHOLDS_THRS)

#define BGT60LTR11_DETECT_THRESHOLDS_DIR_MODE_MASK 0x1
#define BGT60LTR11_DETECT_THRESHOLDS_DIR_MODE_OFFSET 13
#define BGT60LTR11_DETECT_THRESHOLDS_DIR_MODE_FIELD BGT60LTR11_FIELD(BGT60LTR11_DETECT_THRESHOLDS_DIR_MODE)

#define BGT60LTR11_DETECT_THRESHOLDS_APRT_MASK 0x1
#define BGT60LTR11_DETECT_THRESHOLDS_APRT_OFFSET 14
#define BGT60LTR11_DETECT_THRESHOLDS_APRT_FIELD BGT60LTR11_FIELD(BGT60LTR11_DETECT_THRESHOLDS_APRT)

#define BGT60LTR11_DETECT_THRESHOLDS_HPRT_MASK 0x1
#define BGT60LTR11_DETECT_THRESHOLDS_HPRT_OFFSET 15
#define BGT60LTR11_DETECT_THRESHOLDS_HPRT_FIELD BGT60LTR11_FIELD(BGT60LTR11_DETECT_THRESHOLDS_HPRT)

/* PLL1 Fields */
#define BGT60LTR11_PLL1_PLL_PFD_RDT_SEL_MASK 0x3
#define BGT60LTR11_PLL1_PLL_PFD_RDT_SEL_OFFSET 0
#define BGT60LTR11_PLL1_PLL_PFD_RDT_SEL_FIELD BGT60LTR11_FIELD(BGT60LTR11_PLL1_PLL_PFD_RDT_SEL)

#define BGT60LTR11_PLL1_PLL_CP_MODE_MASK 0x1
#define BGT60LTR11_PLL1_PLL_CP_MODE_OFFSET 2
#define BGT60LTR11_PLL1_PLL_CP_MODE_FIELD BGT60LTR11_FIELD(BGT60LTR11_PLL1_PLL_CP_MODE)

#define BGT60LTR11_PLL1_PLL_CP_ICP_SEL_MASK 0x7
#define BGT60LTR11_PLL1_PLL_CP_ICP_SEL_OFFSET 3
#define BGT60LTR11_PLL1_PLL_CP_ICP_SEL_FIELD BGT60LTR11_FIELD(BGT60LTR11_PLL1_PLL_CP_ICP_SEL)

#define BGT60LTR11_PLL1_PLL_FBDIV_CNT_MASK 0x1
#define BGT60LTR11_PLL1_PLL_FBDIV_CNT_OFFSET 6
#define BGT60LTR11_PLL1_PLL_FBDIV_CNT_FIELD BGT60LTR11_FIELD(BGT60LTR11_PLL1_PLL_FBDIV_CNT)

#define BGT60LTR11_PLL1_XOSC_MODE_MASK 0x1
#define BGT60LTR11_PLL1_XOSC_MODE_OFFSET 7
#define BGT60LTR11_PLL1_XOSC_MODE_FIELD BGT60LTR11_FIELD(BGT60LTR11_PLL1_XOSC_MODE)

#define BGT60LTR11_PLL1_PLL_LF_R2_SEL_MASK 0x1
#define BGT60LTR11_PLL1_PLL_LF_R2_SEL_OFFSET 8
#define BGT60LTR11_PLL1_PLL_LF_R2_SEL_FIELD BGT60LTR11_FIELD(BGT60LTR11_PLL1_PLL_LF_R2_SEL)

#define BGT60LTR11_PLL1_PLL_CL_LOOP_PMODE_MASK 0x1
#define BGT60LTR11_PLL1_PLL_CL_LOOP_PMODE_OFFSET 9
#define BGT60LTR11_PLL1_PLL_CL_LOOP_PMODE_FIELD BGT60LTR11_FIELD(BGT60LTR11_PLL1_PLL_CL_LOOP_PMODE)

#define BGT60LTR11_PLL1_PLL_LF_R4_SEL_MASK 0x1
#define BGT60LTR11_PLL1_PLL_LF_R4_SEL_OFFSET 10
#define BGT60LTR11_PLL1_PLL_LF_R4_SEL_FIELD BGT60LTR11_FIELD(BGT60LTR11_PLL1_PLL_LF_R4_SEL)

#define BGT60LTR11_PLL1_PLL_LF_ISO_MASK 0x1
#define BGT60LTR11_PLL1_PLL_LF_ISO_OFFSET 11
#define BGT60LTR11_PLL1_PLL_LF_ISO_FIELD BGT60LTR11_FIELD(BGT60LTR11_PLL1_PLL_LF_ISO)

#define BGT60LTR11_PLL1_PLL_BIAS_DIS_MASK 0x1
#define BGT60LTR11_PLL1_PLL_BIAS_DIS_OFFSET 12
#define BGT60LTR11_PLL1_PLL_BIAS_DIS_FIELD BGT60LTR11_FIELD(BGT60LTR11_PLL1_PLL_BIAS_DIS)

#define BGT60LTR11_PLL1_PLL_DFT_DMUX_MASK 0x3
#define BGT60LTR11_PLL1_PLL_DFT_DMUX_OFFSET 14
#define BGT60LTR11_PLL1_PLL_DFT_DMUX_FIELD BGT60LTR11_FIELD(BGT60LTR11_PLL1_PLL_DFT_DMUX)

/* PLL2 Fields */
#define BGT60LTR11_PLL2_PLL_FCW_MASK 0xFFF
#define BGT60LTR11_PLL2_PLL_FCW_OFFSET 0
#define BGT60LTR11_PLL2_PLL_FCW_FIELD BGT60LTR11_FIELD(BGT60LTR11_PLL2_PLL_FCW)

/* PLL3 Fields */
#define BGT60LTR11_PLL3_PLL_LD_EN_MASK 0x1
#define BGT60LTR11_PLL3_PLL_LD_EN_OFFSET 11
#define BGT60LTR11_PLL3_PLL_LD_EN_FIELD BGT60LTR11_FIELD(BGT60LTR11_PLL3_PLL_LD_EN)

#define BGT60LTR11_PLL3_PLL_LD_LEN_MASK 0x1
#define BGT60LTR11_PLL3_PLL_LD_LEN_OFFSET 12
#define BGT60LTR11_PLL3_PLL_LD_LEN_FIELD BGT60LTR11_FIELD(BGT60LTR11_PLL3_PLL_LD_LEN)

#define BGT60LTR11_PLL3_PLL_LD_TW_SEL_MASK 0x7
#define BGT60LTR11_PLL3_PLL_LD_TW_SEL_OFFSET 13
#define BGT60LTR11_PLL3_PLL_LD_TW_SEL_FIELD BGT60LTR11_FIELD(BGT60LTR11_PLL3_PLL_LD_TW_SEL)

/* TIMING Fields */
#define BGT60LTR11_TIMING_MPA_CTRL_MASK 0x7
#define BGT60LTR11_TIMING_MPA_CTRL_OFFSET 0
#define BGT60LTR11_TIMING_MPA_CTRL_FIELD BGT60LTR11_FIELD(BGT60LTR11_TIMING_MPA_CTRL)

#define BGT60LTR11_TIMING_PD_EN_MASK 0x1
#define BGT60LTR11_TIMING_PD_EN_OFFSET 3
#define BGT60LTR11_TIMING_PD_EN_FIELD BGT60LTR11_FIELD(BGT60LTR11_TIMING_PD_EN)

#define BGT60LTR11_TIMING_MPA2SH_DLY_MASK 0x3
#define BGT60LTR11_TIMING_MPA2SH_DLY_OFFSET 4
#define BGT60LTR11_TIMING_MPA2SH_DLY_FIELD BGT60LTR11_FIELD(BGT60LTR11_TIMING_MPA2SH_DLY)

#define BGT60LTR11_TIMING_VCO2PLL_DLY_MASK 0x1
#define BGT60LTR11_TIMING_VCO2PLL_DLY_OFFSET 6
#define BGT60LTR11_TIMING_VCO2PLL_DLY_FIELD BGT60LTR11_FIELD(BGT60LTR11_TIMING_VCO2PLL_DLY)

#define BGT60LTR11_TIMING_DC_ON_PULSE_LEN_MASK 0x3
#define BGT60LTR11_TIMING_DC_ON_PULSE_LEN_OFFSET 8
#define BGT60LTR11_TIMING_DC_ON_PULSE_LEN_FIELD BGT60LTR11_FIELD(BGT60LTR11_TIMING_DC_ON_PULSE_LEN)

#define BGT60LTR11_TIMING_DC_REP_RATE_MASK 0x3
#define BGT60LTR11_TIMING_DC_REP_RATE_OFFSET 10
#define BGT60LTR11_TIMING_DC_REP_RATE_FIELD BGT60LTR11_FIELD(BGT60LTR11_TIMING_DC_REP_RATE)

/* DIVIDER Fields */
#define BGT60LTR11_DIVIDER_DIV_TESTMODE_EN_MASK 0x1
#define BGT60LTR11_DIVIDER_DIV_TESTMODE_EN_OFFSET 0
#define BGT60LTR11_DIVIDER_DIV_TESTMODE_EN_FIELD BGT60LTR11_FIELD(BGT60LTR11_DIVIDER_DIV_TESTMODE_EN)

#define BGT60LTR11_DIVIDER_DIV_OUT_EN_MASK 0x1
#define BGT60LTR11_DIVIDER_DIV_OUT_EN_OFFSET 1
#define BGT60LTR11_DIVIDER_DIV_OUT_EN_FIELD BGT60LTR11_FIELD(BGT60LTR11_DIVIDER_DIV_OUT_EN)

#define BGT60LTR11_DIVIDER_DIV_SEL_MASK 0x3
#define BGT60LTR11_DIVIDER_DIV_SEL_OFFSET 2
#define BGT60LTR11_DIVIDER_DIV_SEL_FIELD BGT60LTR11_FIELD(BGT60LTR11_DIVIDER_DIV_SEL)

/* BASEBAND Fields */
#define BGT60LTR11_BASEBAND_BB_CTRL_GAIN_MASK 0xF
#define BGT60LTR11_BASEBAND_BB_CTRL_GAIN_OFFSET 0
#define BGT60LTR11_BASEBAND_BB_CTRL_GAIN_FIELD BGT60LTR11_FIELD(BGT60LTR11_BASEBAND_BB_CTRL_GAIN)

#define BGT60LTR11_BASEBAND_BB_LPF_BW_MASK 0x1
#define BGT60LTR11_BASEBAND_BB_LPF_BW_OFFSET 4
#define BGT60LTR11_BASEBAND_BB_LPF_BW_FIELD BGT60LTR11_FIELD(BGT60LTR11_BASEBAND_BB_LPF_BW)

#define BGT60LTR11_BASEBAND_BB_CLK_CHOP_SEL_MASK 0x1
#define BGT60LTR11_BASEBAND_BB_CLK_CHOP_SEL_OFFSET 5
#define BGT60LTR11_BASEBAND_BB_CLK_CHOP_SEL_FIELD BGT60LTR11_FIELD(BGT60LTR11_BASEBAND_BB_CLK_CHOP_SEL)

#define BGT60LTR11_BASEBAND_BB_HP_RES_MASK 0x3
#define BGT60LTR11_BASEBAND_BB_HP_RES_OFFSET 6
#define BGT60LTR11_BASEBAND_BB_HP_RES_FIELD BGT60LTR11_FIELD(BGT60LTR11_BASEBAND_BB_HP_RES)

/* DETETCTOR_HOLDTIME Fields */
#define BGT60LTR11_DETETCTOR_HOLDTIME_HOLD_MASK 0xFFFF
#define BGT60LTR11_DETETCTOR_HOLDTIME_HOLD_OFFSET 0
#define BGT60LTR11_DETETCTOR_HOLDTIME_HOLD_FIELD BGT60LTR11_FIELD(BGT60LTR11_DETETCTOR_HOLDTIME_HOLD)

/* BITE_AMUX Fields */
#define BGT60LTR11_BITE_AMUX_BITE_EN_MASK 0x1
#define BGT60LTR11_BITE_AMUX_BITE_EN_OFFSET 0
#define BGT60LTR11_BITE_AMUX_BITE_EN_FIELD BGT60LTR11_FIELD(BGT60LTR11_BITE_AMUX_BITE_EN)

#define BGT60LTR11_BITE_AMUX_BITE_CTRL_MASK 0x7
#define BGT60LTR11_BITE_AMUX_BITE_CTRL_OFFSET 1
#define BGT60LTR11_BITE_AMUX_BITE_CTRL_FIELD BGT60LTR11_FIELD(BGT60LTR11_BITE_AMUX_BITE_CTRL)

#define BGT60LTR11_BITE_AMUX_BITE_PD_EN_MASK 0x1
#define BGT60LTR11_BITE_AMUX_BITE_PD_EN_OFFSET 4
#define BGT60LTR11_BITE_AMUX_BITE_PD_EN_FIELD BGT60LTR11_FIELD(BGT60LTR11_BITE_AMUX_BITE_PD_EN)

#define BGT60LTR11_BITE_AMUX_BB_AMUX_EN_MASK 0x1
#define BGT60LTR11_BITE_AMUX_BB_AMUX_EN_OFFSET 5
#define BGT60LTR11_BITE_AMUX_BB_AMUX_EN_FIELD BGT60LTR11_FIELD(BGT60LTR11_BITE_AMUX_BB_AMUX_EN)

#define BGT60LTR11_BITE_AMUX_BB_AMUX_CTRL_MASK 0x3
#define BGT60LTR11_BITE_AMUX_BB_AMUX_CTRL_OFFSET 6
#define BGT60LTR11_BITE_AMUX_BB_AMUX_CTRL_FIELD BGT60LTR11_FIELD(BGT60LTR11_BITE_AMUX_BB_AMUX_CTRL)

/* ALGO1 Fields */
#define BGT60LTR11_ALGO1_PRT_MULT_MASK 0x3
#define BGT60LTR11_ALGO1_PRT_MULT_OFFSET 0
#define BGT60LTR11_ALGO1_PRT_MULT_FIELD BGT60LTR11_FIELD(BGT60LTR11_ALGO1_PRT_MULT)

#define BGT60LTR11_ALGO1_MEAN_WIN_LEN_MASK 0x7
#define BGT60LTR11_ALGO1_MEAN_WIN_LEN_OFFSET 2
#define BGT60LTR11_ALGO1_MEAN_WIN_LEN_FIELD BGT60LTR11_FIELD(BGT60LTR11_ALGO1_MEAN_WIN_LEN)

#define BGT60LTR11_ALGO1_PHASE_WIN_LEN_MASK 0x7
#define BGT60LTR11_ALGO1_PHASE_WIN_LEN_OFFSET 5
#define BGT60LTR11_ALGO1_PHASE_WIN_LEN_FIELD BGT60LTR11_FIELD(BGT60LTR11_ALGO1_PHASE_WIN_LEN)

/* ALGO2 Fields */
#define BGT60LTR11_ALGO2_PHASE_THRS_MASK 0x3
#define BGT60LTR11_ALGO2_PHASE_THRS_OFFSET 0
#define BGT60LTR11_ALGO2_PHASE_THRS_FIELD BGT60LTR11_FIELD(BGT60LTR11_ALGO2_PHASE_THRS)

#define BGT60LTR11_ALGO2_PULSE_MON_MASK 0x1
#define BGT60LTR11_ALGO2_PULSE_MON_OFFSET 2
#define BGT60LTR11_ALGO2_PULSE_MON_FIELD BGT60LTR11_FIELD(BGT60LTR11_ALGO2_PULSE_MON)

#define BGT60LTR11_ALGO2_AUTOBLIND_DIS_MASK 0x1
#define BGT60LTR11_ALGO2_AUTOBLIND_DIS_OFFSET 3
#define BGT60LTR11_ALGO2_AUTOBLIND_DIS_FIELD BGT60LTR11_FIELD(BGT60LTR11_ALGO2_AUTOBLIND_DIS)

#define BGT60LTR11_ALGO2_SWAP_IQ_MASK 0x1
#define BGT60LTR11_ALGO2_SWAP_IQ_OFFSET 4
#define BGT60LTR11_ALGO2_SWAP_IQ_FIELD BGT60LTR11_FIELD(BGT60LTR11_ALGO2_SWAP_IQ)

#define BGT60LTR11_ALGO2_HOLD_X32_MASK 0x1
#define BGT60LTR11_ALGO2_HOLD_X32_OFFSET 5
#define BGT60LTR11_ALGO2_HOLD_X32_FIELD BGT60LTR11_FIELD(BGT60LTR11_ALGO2_HOLD_X32)

#define BGT60LTR11_ALGO2_DIR_KEEP_MASK 0x1
#define BGT60LTR11_ALGO2_DIR_KEEP_OFFSET 6
#define BGT60LTR11_ALGO2_DIR_KEEP_FIELD BGT60LTR11_FIELD(BGT60LTR11_ALGO2_DIR_KEEP)

#define BGT60LTR11_ALGO2_DIR_HYS_DIS_MASK 0x1
#define BGT60LTR11_ALGO2_DIR_HYS_DIS_OFFSET 7
#define BGT60LTR11_ALGO2_DIR_HYS_DIS_FIELD BGT60LTR11_FIELD(BGT60LTR11_ALGO2_DIR_HYS_DIS)

#define BGT60LTR11_ALGO2_THRS_OFFSET_MASK 0xFF
#define BGT60LTR11_ALGO2_THRS_OFFSET_OFFSET 8
#define BGT60LTR11_ALGO2_THRS_OFFSET_FIELD BGT60LTR11_FIELD(BGT60LTR11_ALGO2_THRS_OFFSET)

/* DIGITAL_CTRL	Fields */
#define BGT60LTR11_DIGITAL_CTRL_STAT_MUX_MASK 0xF
#define BGT60LTR11_DIGITAL_CTRL_STAT_MUX_OFFSET 0
#define BGT60LTR11_DIGITAL_CTRL_STAT_MUX_FIELD BGT60LTR11_FIELD(BGT60LTR11_DIGITAL_CTRL_STAT_MUX)

#define BGT60LTR11_DIGITAL_CTRL_DIR_POL_MASK 0x1
#define BGT60LTR11_DIGITAL_CTRL_DIR_POL_OFFSET 4
#define BGT60LTR11_DIGITAL_CTRL_DIR_POL_FIELD BGT60LTR11_FIELD(BGT60LTR11_DIGITAL_CTRL_DIR_POL)

#define BGT60LTR11_DIGITAL_CTRL_MOT_POL_MASK 0x1
#define BGT60LTR11_DIGITAL_CTRL_MOT_POL_OFFSET 5
#define BGT60LTR11_DIGITAL_CTRL_MOT_POL_FIELD BGT60LTR11_FIELD(BGT60LTR11_DIGITAL_CTRL_MOT_POL)

#define BGT60LTR11_DIGITAL_CTRL_MISO_DRV_MASK 0x1
#define BGT60LTR11_DIGITAL_CTRL_MISO_DRV_OFFSET 6
#define BGT60LTR11_DIGITAL_CTRL_MISO_DRV_FIELD BGT60LTR11_FIELD(BGT60LTR11_DIGITAL_CTRL_MISO_DRV)

#define BGT60LTR11_DIGITAL_CTRL_ADC_MON_MASK 0x1
#define BGT60LTR11_DIGITAL_CTRL_ADC_MON_OFFSET 7
#define BGT60LTR11_DIGITAL_CTRL_ADC_MON_FIELD BGT60LTR11_FIELD(BGT60LTR11_DIGITAL_CTRL_ADC_MON)

#define BGT60LTR11_DIGITAL_CTRL_FASTMODE_MASK 0x1
#define BGT60LTR11_DIGITAL_CTRL_FASTMODE_OFFSET 8
#define BGT60LTR11_DIGITAL_CTRL_FASTMODE_FIELD BGT60LTR11_FIELD(BGT60LTR11_DIGITAL_CTRL_FASTMODE)

#define BGT60LTR11_DIGITAL_CTRL_DIR_C2_1_MASK 0x3
#define BGT60LTR11_DIGITAL_CTRL_DIR_C2_1_OFFSET 9
#define BGT60LTR11_DIGITAL_CTRL_DIR_C2_1_FIELD BGT60LTR11_FIELD(BGT60LTR11_DIGITAL_CTRL_DIR_C2_1)

#define BGT60LTR11_DIGITAL_CTRL_FAST_PHASE_MASK 0x1
#define BGT60LTR11_DIGITAL_CTRL_FAST_PHASE_OFFSET 11
#define BGT60LTR11_DIGITAL_CTRL_FAST_PHASE_FIELD BGT60LTR11_FIELD(BGT60LTR11_DIGITAL_CTRL_FAST_PHASE)

#define BGT60LTR11_DIGITAL_CTRL_START_CW_MASK 0x1
#define BGT60LTR11_DIGITAL_CTRL_START_CW_OFFSET 12
#define BGT60LTR11_DIGITAL_CTRL_START_CW_FIELD BGT60LTR11_FIELD(BGT60LTR11_DIGITAL_CTRL_START_CW)

#define BGT60LTR11_DIGITAL_CTRL_CLK_EXT_DIS_MASK 0x1
#define BGT60LTR11_DIGITAL_CTRL_CLK_EXT_DIS_OFFSET 13
#define BGT60LTR11_DIGITAL_CTRL_CLK_EXT_DIS_FIELD BGT60LTR11_FIELD(BGT60LTR11_DIGITAL_CTRL_CLK_EXT_DIS)

#define BGT60LTR11_DIGITAL_CTRL_START_PM_MASK 0x1
#define BGT60LTR11_DIGITAL_CTRL_START_PM_OFFSET 14
#define BGT60LTR11_DIGITAL_CTRL_START_PM_FIELD BGT60LTR11_FIELD(BGT60LTR11_DIGITAL_CTRL_START_PM)

#define BGT60LTR11_DIGITAL_CTRL_SOFT_RESET_MASK 0x1
#define BGT60LTR11_DIGITAL_CTRL_SOFT_RESET_OFFSET 15
#define BGT60LTR11_DIGITAL_CTRL_SOFT_RESET_FIELD BGT60LTR11_FIELD(BGT60LTR11_DIGITAL_CTRL_SOFT_RESET)

/* ADC_START Fields */
#define BGT60LTR11_ADC_START_ADC_CLK_EN_MASK 0x1
#define BGT60LTR11_ADC_START_ADC_CLK_EN_OFFSET 0
#define BGT60LTR11_ADC_START_ADC_CLK_EN_FIELD BGT60LTR11_FIELD(BGT60LTR11_ADC_START_ADC_CLK_EN)

#define BGT60LTR11_ADC_START_BANDGAP_EN_MASK 0x1
#define BGT60LTR11_ADC_START_BANDGAP_EN_OFFSET 1
#define BGT60LTR11_ADC_START_BANDGAP_EN_FIELD BGT60LTR11_FIELD(BGT60LTR11_ADC_START_BANDGAP_EN)

#define BGT60LTR11_ADC_START_ADC_EN_MASK 0x1
#define BGT60LTR11_ADC_START_ADC_EN_OFFSET 2
#define BGT60LTR11_ADC_START_ADC_EN_FIELD BGT60LTR11_FIELD(BGT60LTR11_ADC_START_ADC_EN)

/* ADC_CONVERT Fields */
#define BGT60LTR11_ADC_CONVERT_CHNR_MASK 0xF
#define BGT60LTR11_ADC_CONVERT_CHNR_OFFSET 0
#define BGT60LTR11_ADC_CONVERT_CHNR_FIELD BGT60LTR11_FIELD(BGT60LTR11_ADC_CONVERT_CHNR)

#define BGT60LTR11_ADC_CONVERT_CHNR_ALL_MASK 0x1
#define BGT60LTR11_ADC_CONVERT_CHNR_ALL_OFFSET 5
#define BGT60LTR11_ADC_CONVERT_CHNR_ALL_FIELD BGT60LTR11_FIELD(BGT60LTR11_ADC_CONVERT_CHNR_ALL)

#define BGT60LTR11_ADC_CONVERT_LV_GAIN_MASK 0x1
#define BGT60LTR11_ADC_CONVERT_LV_GAIN_OFFSET 7
#define BGT60LTR11_ADC_CONVERT_LV_GAIN_FIELD BGT60LTR11_FIELD(BGT60LTR11_ADC_CONVERT_LV_GAIN)

/* ADC_STATUS Fields */
#define BGT60LTR11_ADC_STATUS_BANDGAP_UP_MASK 0x1
#define BGT60LTR11_ADC_STATUS_BANDGAP_UP_OFFSET 0
#define BGT60LTR11_ADC_STATUS_BANDGAP_UP_FIELD BGT60LTR11_FIELD(BGT60LTR11_ADC_STATUS_BANDGAP_UP)

#define BGT60LTR11_ADC_STATUS_ADC_READY_MASK 0x1
#define BGT60LTR11_ADC_STATUS_ADC_READY_OFFSET 1
#define BGT60LTR11_ADC_STATUS_ADC_READY_FIELD BGT60LTR11_FIELD(BGT60LTR11_ADC_STATUS_ADC_READY)

/* STATUS Fields */
#define BGT60LTR11_STATUS_CHIP_VERSION_MASK 0x7
#define BGT60LTR11_STATUS_CHIP_VERSION_OFFSET 0
#define BGT60LTR11_STATUS_CHIP_VERSION_FIELD BGT60LTR11_FIELD(BGT60LTR11_STATUS_CHIP_VERSION)

#define BGT60LTR11_STATUS_PLL_LOCK_DETECT_MASK 0x1
#define BGT60LTR11_STATUS_PLL_LOCK_DETECT_OFFSET 3
#define BGT60LTR11_STATUS_PLL_LOCK_DETECT_FIELD BGT60LTR11_FIELD(BGT60LTR11_STATUS_PLL_LOCK_DETECT)

#define BGT60LTR11_STATUS_ADVANCE_MODE_MASK 0x1
#define BGT60LTR11_STATUS_ADVANCE_MODE_OFFSET 6
#define BGT60LTR11_STATUS_ADVANCE_MODE_FIELD BGT60LTR11_FIELD(BGT60LTR11_STATUS_ADVANCE_MODE)

#define BGT60LTR11_STATUS_QS4_S_MASK 0x3
#define BGT60LTR11_STATUS_QS4_S_OFFSET 7
#define BGT60LTR11_STATUS_QS4_S_FIELD BGT60LTR11_FIELD(BGT60LTR11_STATUS_QS4_S)

#define BGT60LTR11_STATUS_QS3_S_MASK 0x3
#define BGT60LTR11_STATUS_QS3_S_OFFSET 9
#define BGT60LTR11_STATUS_QS3_S_FIELD BGT60LTR11_FIELD(BGT60LTR11_STATUS_QS3_S)

#define BGT60LTR11_STATUS_QS2_S_MASK 0x3
#define BGT60LTR11_STATUS_QS2_S_OFFSET 11
#define BGT60LTR11_STATUS_QS2_S_FIELD BGT60LTR11_FIELD(BGT60LTR11_STATUS_QS2_S)

#define BGT60LTR11_STATUS_INIT_DONE_MASK 0x1
#define BGT60LTR11_STATUS_INIT_DONE_OFFSET 13
#define BGT60LTR11_STATUS_INIT_DONE_FIELD BGT60LTR11_FIELD(BGT60LTR11_STATUS_INIT_DONE)

#define BGT60LTR11_STATUS_QS1_S_MASK 0x3
#define BGT60LTR11_STATUS_QS1_S_OFFSET 14
#define BGT60LTR11_STATUS_QS1_S_FIELD BGT60LTR11_FIELD(BGT60LTR11_STATUS_QS1_S)

/* EFUSE Fields */
#define BGT60LTR11_EFUSE_FUSE_OUT_MASK 0xFFFF
#define BGT60LTR11_EFUSE_FUSE_OUT_OFFSET 0
#define BGT60LTR11_EFUSE_FUSE_OUT_FIELD BGT60LTR11_FIELD(BGT60LTR11_EFUSE_FUSE_OUT)

/* GSR0 Fields */
#define BGT60LTR11_GSR0_ADC_RESULT_READY_MASK 0x1
#define BGT60LTR11_GSR0_ADC_RESULT_READY_OFFSET 2
#define BGT60LTR11_GSR0_ADC_RESULT_READY_FIELD BGT60LTR11_FIELD(BGT60LTR11_GSR0_ADC_RESULT_READY)

typedef enum {
    BGT60LTR11_Status_Ok = 0,
    BGT60LTR11_Status_SpiError = -10,
    BGT60LTR11_Status_NotImplemented = -20,
    BGT60LTR11_Status_BadArg = -21,
    BGT60LTR11_Status_InvalidOperation = -22,
    BGT60LTR11_Status_NotSupported = -24,
} BGT60LTR11_Status;

typedef enum {
    BGT60LTR11_QuadState_Gnd = 0x00,
    BGT60LTR11_QuadState_Open = 0x01,
    BGT60LTR11_QuadState_100k_pullup = 0x02,
    BGT60LTR11_QuadState_Vdd = 0x03,
} BGT60LTR11_QuadState;

typedef enum {
    BGT60LTR11_Frequency_61_1_GHz = 0xF72,
    BGT60LTR11_Frequency_61_2_GHz = 0xF9C,
    BGT60LTR11_Frequency_61_3_GHz = 0xFC6,
    BGT60LTR11_Frequency_61_4_GHz = 0xFEF,
    BGT60LTR11_Frequency_Japan_60_6_GHz = 0xEA2,
    BGT60LTR11_Frequency_Japan_60_7_GHz = 0xECC,
    BGT60LTR11_Frequency_Japan_60_8_GHz = 0xEF5,
    BGT60LTR11_Frequency_Japan_60_9_GHz = 0xF1F,
} BGT60LTR11_Frequency;

typedef enum {
    BGT60LTR11_DirectionInactiveLevel_PDetLow = 0,
    BGT60LTR11_DirectionInactiveLevel_PDetHigh = 1,
} BGT60LTR11_DirectionInactiveLevel;

typedef enum {
    BGT60LTR11_DirectionPolarity_PDetLowWhenDeparting = 0,
    BGT60LTR11_DirectionPolarity_PDetLowWhenApproaching = 1,
} BGT60LTR11_DirectionPolarity;

typedef enum {
    BGT60LTR11_MotionPolarity_TDetIsLowWhenActive = 0,
    BGT60LTR11_MotionPolarity_TDetIsHighWhenActive = 1,
} BGT60LTR11_MotionPolarity;

typedef enum {
    BGT60LTR11_SpiDoOutput_Spi = 0,
    BGT60LTR11_SpiDoOutput_PllLock = 1,
    BGT60LTR11_SpiDoOutput_ReferenceClockDiv4 = 2,
    BGT60LTR11_SpiDoOutput_DividerClockDiv4 = 3,
} BGT60LTR11_SpiDoOutput;

typedef enum {
    BGT60LTR11_LoopfilterIsolationMode_ChargeKeepingBufferEnabled = 0,
    BGT60LTR11_LoopfilterIsolationMode_SwitchesOnly = 1,
} BGT60LTR11_LoopfilterIsolationMode;

typedef enum {
    BGT60LTR11_LoopfilterR4_12_4_kOhm = 0,
    BGT60LTR11_LoopfilterR4_0_1_kOhm = 1,
} BGT60LTR11_LoopfilterR4;

typedef enum {
    BGT60LTR11_LoopfilterR2_21_6_kOhm = 0,
    BGT60LTR11_LoopfilterR2_18_7_kOhm = 1,
} BGT60LTR11_LoopfilterR2;

typedef enum {
    BGT60LTR11_ClosedLoopInPulsedMode_OpenLoop = 0,
    BGT60LTR11_ClosedLoopInPulsedMode_ClosedLoop = 1,
} BGT60LTR11_ClosedLoopInPulsedMode;

typedef enum {
    BGT60LTR11_XtalOscilatorMode_Amplitude1 = 0,
    BGT60LTR11_XtalOscilatorMode_Amplitude2 = 1,
} BGT60LTR11_XtalOscilatorMode;

typedef enum {
    BGT60LTR11_FeedbackDividerCounter_Cnt_21_Freq_38_4_Mhz = 0,
    BGT60LTR11_FeedbackDividerCounter_Cnt_20_Freq_40_Mhz = 1,
} BGT60LTR11_FeedbackDividerCounter;

typedef enum {
    BGT60LTR11_ChargePumpCurrent_20_uA = 0,
    BGT60LTR11_ChargePumpCurrent_25_uA = 1,
    BGT60LTR11_ChargePumpCurrent_30_uA = 2,
    BGT60LTR11_ChargePumpCurrent_35_uA = 3,
    BGT60LTR11_ChargePumpCurrent_40_uA = 4,
    BGT60LTR11_ChargePumpCurrent_45_uA = 5,
    BGT60LTR11_ChargePumpCurrent_50_uA = 6,
    BGT60LTR11_ChargePumpCurrent_55_uA = 7,
} BGT60LTR11_ChargePumpCurrent;

typedef enum {
    BGT60LTR11_ChargePumpBiasMode_BiasRegulationMode = 0,
    BGT60LTR11_ChargePumpBiasMode_BiasFixedMode = 1,
} BGT60LTR11_ChargePumpBiasMode;

typedef enum {
    BGT60LTR11_PfdResetDelay_175_ps = 0,
    BGT60LTR11_PfdResetDelay_275_ps = 1,
    BGT60LTR11_PfdResetDelay_375_ps = 2,
    BGT60LTR11_PfdResetDelay_470_ps = 3,
} BGT60LTR11_PfdResetDelay;

typedef enum {
    BGT60LTR11_LockDetectionTimeWindow_0_26_ns = 0,
    BGT60LTR11_LockDetectionTimeWindow_0_5_ns = 1,
    BGT60LTR11_LockDetectionTimeWindow_1_0_ns = 2,
    BGT60LTR11_LockDetectionTimeWindow_1_5_ns = 3,
    BGT60LTR11_LockDetectionTimeWindow_2_0_ns = 4,
    BGT60LTR11_LockDetectionTimeWindow_2_8_ns = 5,
    BGT60LTR11_LockDetectionTimeWindow_3_8_ns = 6,
    BGT60LTR11_LockDetectionTimeWindow_4_6_ns = 7,
} BGT60LTR11_LockDetectionTimeWindow;

typedef enum {
    BGT60LTR11_LockDetectionTiming_LockTime_24_Cycles_Delay_3_57_us = 0,
    BGT60LTR11_LockDetectionTiming_LockTime_16_Cycles_Delay_5_23_us = 1,
} BGT60LTR11_LockDetectionTiming;

typedef enum {
    BGT60LTR11_DutyCycleRepetitionRate_250_us = 0,
    BGT60LTR11_DutyCycleRepetitionRate_500_us = 1,
    BGT60LTR11_DutyCycleRepetitionRate_1000_us = 2,
    BGT60LTR11_DutyCycleRepetitionRate_2000_us = 3,
} BGT60LTR11_DutyCycleRepetitionRate;

typedef enum {
    BGT60LTR11_DutyCyclePulseOnLength_5_us = 0,
    BGT60LTR11_DutyCyclePulseOnLength_10_us = 1,
    BGT60LTR11_DutyCyclePulseOnLength_3_us = 2,
    BGT60LTR11_DutyCyclePulseOnLength_4_us = 3,
} BGT60LTR11_DutyCyclePulseOnLength;

typedef enum {
    BGT60LTR11_VcoToPllDelay_500_ns = 0,
    BGT60LTR11_VcoToPllDelay_1000_ns = 1,
} BGT60LTR11_VcoToPllDelay;

typedef enum {
    BGT60LTR11_MpaSampleHoldDelay_500_ns = 0,
    BGT60LTR11_MpaSampleHoldDelay_1000_ns = 1,
    BGT60LTR11_MpaSampleHoldDelay_2000_ns = 2,
    BGT60LTR11_MpaSampleHoldDelay_4000_ns = 3,
} BGT60LTR11_MpaSampleHoldDelay;

typedef enum {
    BGT60LTR11_MediumPowerAmplifierGainControl_Minus_34_dBm = 0,
    BGT60LTR11_MediumPowerAmplifierGainControl_Minus_31_5_dBm = 1,
    BGT60LTR11_MediumPowerAmplifierGainControl_Minus_25_dBm = 2,
    BGT60LTR11_MediumPowerAmplifierGainControl_Minus_18_dBm = 3,
    BGT60LTR11_MediumPowerAmplifierGainControl_Minus_11_dBm = 4,
    BGT60LTR11_MediumPowerAmplifierGainControl_Minus_5_dBm = 5,
    BGT60LTR11_MediumPowerAmplifierGainControl_Minus_0_dBm = 6,
    BGT60LTR11_MediumPowerAmplifierGainControl_Plus_4_5_dBm = 7,
} BGT60LTR11_MediumPowerAmplifierGainControl;

typedef enum {
    BGT60LTR11_ExternalClockOutputFrequencyDivider_InternalClock = 0,
    BGT60LTR11_ExternalClockOutputFrequencyDivider_2_Pow_14 = 1,
    BGT60LTR11_ExternalClockOutputFrequencyDivider_2_Pow_17 = 2,
    BGT60LTR11_ExternalClockOutputFrequencyDivider_2_Pow_21 = 3,
} BGT60LTR11_ExternalClockOutputFrequencyDivider;

typedef enum {
    BGT60LTR11_HighPassFilterResistor_8_MOhm = 0,
    BGT60LTR11_HighPassFilterResistor_4_MOhm = 1,
    BGT60LTR11_HighPassFilterResistor_2_MOhm = 2,
    BGT60LTR11_HighPassFilterResistor_1_MOhm = 3,
} BGT60LTR11_HighPassFilterResistor;

typedef enum {
    BGT60LTR11_ClockChopFrequency_96_kHz = 0,
    BGT60LTR11_ClockChopFrequency_192_kHz = 1,
} BGT60LTR11_ClockChopFrequency;

typedef enum {
    BGT60LTR11_LowPassFilter_10_kHz = 0,
    BGT60LTR11_LowPassFilter_60_kHz = 1,
} BGT60LTR11_LowPassFilter;

typedef enum {
    BGT60LTR11_BasebandPga_10_dB = 0,
    BGT60LTR11_BasebandPga_15_dB = 1,
    BGT60LTR11_BasebandPga_20_dB = 2,
    BGT60LTR11_BasebandPga_25_dB = 3,
    BGT60LTR11_BasebandPga_30_dB = 4,
    BGT60LTR11_BasebandPga_35_dB = 5,
    BGT60LTR11_BasebandPga_40_dB = 6,
    BGT60LTR11_BasebandPga_45_dB = 7,
    BGT60LTR11_BasebandPga_50_dB = 8,
} BGT60LTR11_BasebandPga;

typedef enum {
    BGT60LTR11_Qs4Output_BasebandBandgap = 0,
    BGT60LTR11_Qs4Output_TemperatureSensor = 1,
    BGT60LTR11_Qs4Output_CommonModeI = 2,
    BGT60LTR11_Qs4Output_CommonModeQ = 3,
} BGT60LTR11_Qs4Output;

typedef enum {
    BGT60LTR11_BitePhase_0_deg = 0,
    BGT60LTR11_BitePhase_45_deg = 1,
    BGT60LTR11_BitePhase_90_deg = 2,
    BGT60LTR11_BitePhase_135_deg = 3,
    BGT60LTR11_BitePhase_180_deg = 4,
    BGT60LTR11_BitePhase_225_deg = 5,
    BGT60LTR11_BitePhase_270_deg = 6,
    BGT60LTR11_BitePhase_315_deg = 7,
} BGT60LTR11_BitePhase;

typedef enum {
    BGT60LTR11_WindowLength_256 = 0,
    BGT60LTR11_WindowLength_512 = 1,
    BGT60LTR11_WindowLength_128 = 3,
    BGT60LTR11_WindowLength_64 = 4,
} BGT60LTR11_WindowLength;

typedef enum {
    BGT60LTR11_AdaptivePulseRepetitionTimeMultiplier_4 = 0,
    BGT60LTR11_AdaptivePulseRepetitionTimeMultiplier_8 = 1,
    BGT60LTR11_AdaptivePulseRepetitionTimeMultiplier_16 = 2,
    BGT60LTR11_AdaptivePulseRepetitionTimeMultiplier_2 = 3,
} BGT60LTR11_AdaptivePulseRepetitionTimeMultiplier;

typedef enum {
    BGT60LTR11_DirectionPhaseThreshold_NoChange = 0,
    BGT60LTR11_DirectionPhaseThreshold_Div2 = 1,
    BGT60LTR11_DirectionPhaseThreshold_Div4 = 2,
    BGT60LTR11_DirectionPhaseThreshold_Set0 = 3,
} BGT60LTR11_DirectionPhaseThreshold;

typedef enum {
    BGT60LTR11_SpiMode_CPOL1_CPHA0 = 0,
    BGT60LTR11_SpiMode_CPOL0_CPHA0 = 1,
} BGT60LTR11_SpiMode;

typedef enum {
    BGT60LTR11_InactiveMiso_HiZ = 0,
    BGT60LTR11_InactiveMiso_Out = 1,
} BGT60LTR11_InactiveMiso;

typedef enum {
	BGT60LTR11_AdcChannel_PowerSensorMpaOutout = 0,
	BGT60LTR11_AdcChannel_PowerSensorMpaxOutout = 1,
	BGT60LTR11_AdcChannel_Ifi = 2,
	BGT60LTR11_AdcChannel_Ifq = 3,
	BGT60LTR11_AdcChannel_PowerSensorBitePdOut = 4,
	BGT60LTR11_AdcChannel_PowerSensorBitePdOutx = 5,
	BGT60LTR11_AdcChannel_Qs2 = 6,
	BGT60LTR11_AdcChannel_Qs3 = 7,
	BGT60LTR11_AdcChannel_CommonModeIfi = 8,
	BGT60LTR11_AdcChannel_CommonModeIfq = 9,
	BGT60LTR11_AdcChannel_VddRf = 10,
	BGT60LTR11_AdcChannel_Gnd = 11,
	BGT60LTR11_AdcChannel_TemperatureSensor = 12,
	BGT60LTR11_AdcChannel_PllBandgapVoltage = 13,
	BGT60LTR11_AdcChannel_AdcBandgapVoltage = 14,
	BGT60LTR11_AdcChannel_AbbBandgapVoltage = 15,
} BGT60LTR11_AdcChannel;

typedef struct {
    struct BGT60LTR11_DetectorConfiguration {
        uint16_t threshold;
        int8_t thresholdOffset;
        uint16_t holdTime;
        int holdMultipliedBy32 : 1;
        BGT60LTR11_DirectionInactiveLevel directionInactiveLevel : 1;
        BGT60LTR11_DirectionPolarity directionPolarity : 1;
        BGT60LTR11_MotionPolarity motionPolarity : 1;
        int disableDirectionHystheresis : 1;
        int dectedDirectionOnlyOnMotion : 1;
        int swapIq : 1;
        // int disableBlanking : 1; // Bit marked as Do not Change
        int monitorRadarPulse : 1;
        BGT60LTR11_DirectionPhaseThreshold directionPhaseThreshold : 2;
    } detector;

    struct BGT60LTR11_PllConfiguration {
        BGT60LTR11_Frequency frequency;
        int disablePllBias : 1;
        BGT60LTR11_LoopfilterIsolationMode loopfilterIsolationMode : 1;
        BGT60LTR11_LoopfilterR4 loopfilterR4 : 1;
        BGT60LTR11_LoopfilterR2 loopfilterR2 : 1;
        BGT60LTR11_ClosedLoopInPulsedMode closedLoopInPulsedMode : 1;
        BGT60LTR11_XtalOscilatorMode xtalOscilatorMode : 1;
        BGT60LTR11_FeedbackDividerCounter feedbackDivderCounter : 1;
        BGT60LTR11_ChargePumpCurrent chargePumpCurrent : 3;
        BGT60LTR11_ChargePumpBiasMode chargePumpBiasMode : 1;
        BGT60LTR11_PfdResetDelay pfdResetDelay : 2;
        int enableLockDetection : 1;
        BGT60LTR11_LockDetectionTimeWindow lockDetectionTimeWindow : 3;
        BGT60LTR11_LockDetectionTiming lockDetectionTiming : 1;
    } pll;

    struct BGT60LTR11_TimingConfiguration {
        int enableHighPulseRepetitionTime : 1;
        int enableAdaptivePulseRepetitionTime : 1;
        BGT60LTR11_AdaptivePulseRepetitionTimeMultiplier adaptivePulseRepetitionTimeMultiplier : 2;
        BGT60LTR11_DutyCycleRepetitionRate dutyCycleRepetitionRate : 2;
        BGT60LTR11_DutyCyclePulseOnLength dutyCyclePulseOnLength : 2;
        BGT60LTR11_VcoToPllDelay vcoToPllDelay : 1;
        BGT60LTR11_MpaSampleHoldDelay mpaSampleHoldDelay : 2;
        int enablePd : 1;
        BGT60LTR11_MediumPowerAmplifierGainControl mediumPowerAmplifierGainControl : 3;
    } timing;

    struct BGT60LTR11_ExternalClockConfiguration {
        int enableDividerOutput : 1;
        int enableDividerTestMode : 1;
        BGT60LTR11_ExternalClockOutputFrequencyDivider divider : 2;
    } externalClock;

    struct BGT60LTR11_BasebandConfiguration {
        BGT60LTR11_HighPassFilterResistor highPassFilterResistor : 2;
        BGT60LTR11_ClockChopFrequency clockChopFrequency : 1;
        BGT60LTR11_LowPassFilter lowPassFilter : 1;
        BGT60LTR11_BasebandPga pga : 4;
        int enableQs4Output : 1;
        BGT60LTR11_Qs4Output qs4Output : 2;
    } baseband;

    struct BGT60LTR11_BiteConfiguration{
        int enable : 1;
        int enablePowerDetector : 1;
        BGT60LTR11_BitePhase phase : 3;
    } bite;

    struct BGT60LTR11_AlgoConfiguration {
        BGT60LTR11_WindowLength phaseWindowLength : 3;
        BGT60LTR11_WindowLength meanWindowLength : 3;
    } algo;

    struct BGT60LTR11_DigitalConfiguration {
        int disableExternalClock : 1;
        int enableFasterPhaseEvaluation : 1;
        BGT60LTR11_SpiMode spiMode : 1;
        BGT60LTR11_InactiveMiso inactiveMiso : 1;
        BGT60LTR11_SpiDoOutput spiDoOutput : 2;
        // int enableAdcMonitoring : 1; // Bit marked as Do not Change
    } digital;

} BGT60LTR11_Configuration;

typedef struct {
    uint32_t slaveSelect;
	int isAutonomous;
	struct BGT60LTR11_DigitalConfiguration actualDigitalConfig;
	struct BGT60LTR11_DetectorConfiguration actualDetectorConfig;
} BGT60LTR11_Device;

BGT60LTR11_Status BGT60LTR11_Init(BGT60LTR11_Device* dev, uint32_t slaveSelect);
BGT60LTR11_Status BGT60LTR11_Deinit(BGT60LTR11_Device* dev);

BGT60LTR11_Status BGT60LTR11_SoftReset(BGT60LTR11_Device* dev);

BGT60LTR11_Status BGT60LTR11_LoadDefaultConfiguration(BGT60LTR11_Configuration* config);
BGT60LTR11_Status BGT60LTR11_SetConfiguration(BGT60LTR11_Device* dev, BGT60LTR11_Configuration* config);

BGT60LTR11_Status BGT60LTR11_SwitchToAutonomousPulsedMode(BGT60LTR11_Device* dev);
BGT60LTR11_Status BGT60LTR11_SwitchToAutonomousCWMode(BGT60LTR11_Device* dev);

BGT60LTR11_Status BGT60LTR11_GetQuadStateInput(BGT60LTR11_Device* dev, int inputNumber, BGT60LTR11_QuadState* state);
BGT60LTR11_Status BGT60LTR11_GetChipVersion(BGT60LTR11_Device* dev, uint8_t* chipVersion);

BGT60LTR11_Status BGT60LTR11_GetAdcData(BGT60LTR11_Device* dev, BGT60LTR11_AdcChannel adcChannel, uint16_t* data);
BGT60LTR11_Status BGT60LTR11_GetAdcDataMultiple(BGT60LTR11_Device* dev, BGT60LTR11_AdcChannel adcChannelStart, int adcChannelsCount, uint16_t* data);

#endif
